
syntax = "proto3";
package matsim.pb;

option java_package = "org.matsim.core.utils.pb";
option java_outer_classname = "ProtoEvents";

import "matsim/pb/Ids.proto";
import "matsim/pb/Model.proto";

/*
 * Holder of multiple events. More efficient to parse than many small messages.
 */
message EventBatch {
    repeated Event events = 1;
}

/*
  Protobuf event definition. For detailed event documentation refer to the corresponding java code.
 */
message Event {

    double time = 1;
    Coordinate coords = 2;

    oneof type {
        GenericEvent generic = 3;
        ActivityEndEvent activityEnd = 4;
        ActivityStartEvent activityStart = 5;
        LinkEnterEvent linkEnter = 6;
        LinkLeaveEvent linkLeave = 7;
        PersonArrivalEvent personalArrival = 8;
        PersonDepartureEvent personDeparture = 9;
        PersonEntersVehicleEvent personEntersVehicle = 10;
        PersonLeavesVehicleEvent personLeavesVehicle = 11;
        PersonMoneyEvent personMoney = 12;
        PersonStuckEvent personStuck = 13;
        TransitDriverStartsEvent transitDriverStarts = 14;
        VehicleAbortsEvent vehicleAborts = 15;
        VehicleEntersTrafficEvent vehicleEntersTraffic = 16;
        VehicleLeavesTrafficEvent vehicleLeavesTraffic = 17;
    }
}


message GenericEvent {

    string type = 1;
    map<string, string> attrs = 2;

}

message ActivityEndEvent {

    ProtoId linkId = 1;
    ProtoId facilityId = 2;
    ProtoId personId = 3;
    string acttype = 4;
}

message ActivityStartEvent {
    ProtoId linkId = 1;
    ProtoId facilityId = 2;
    ProtoId personId = 3;
    string acttype = 4;
}

message LinkEnterEvent {
    ProtoId linkId = 1;
    ProtoId vehicleId = 2;
}

message LinkLeaveEvent {
    ProtoId linkId = 1;
    ProtoId vehicleId = 2;
}

message PersonArrivalEvent {
    ProtoId linkId = 1;
    string legMode = 2;
    ProtoId personId = 3;
}

message PersonDepartureEvent {
    ProtoId linkId = 1;
    string legMode = 2;
    ProtoId personId = 3;
}

message PersonEntersVehicleEvent {
    ProtoId personId = 1;
    ProtoId vehicleId = 2;
}

message PersonLeavesVehicleEvent {
    ProtoId personId = 1;
    ProtoId vehicleId = 2;
}

message PersonMoneyEvent {
    ProtoId personId = 1;
    double amount = 2;
    string purpose = 3;
    string transactionPartner = 4;
}

message PersonStuckEvent {
    ProtoId personId = 1;
    ProtoId linkId = 2;
    string legMode = 3;
}

message TransitDriverStartsEvent {
    ProtoId driverId = 1;
    ProtoId vehicleId = 2;
    ProtoId transitRouteId = 3;
    ProtoId transitLineId = 4;
    ProtoId departureId = 5;
}

message VehicleAbortsEvent {
    ProtoId vehicleId = 1;
    ProtoId linkId = 2;
}

message VehicleEntersTrafficEvent {
    ProtoId driverId = 1;
    ProtoId linkId = 2;
    ProtoId vehicleId = 3;
    string networkMode = 4;
    double relativePositionOnLink = 5;
}

message VehicleLeavesTrafficEvent {
    ProtoId driverId = 1;
    ProtoId linkId = 2;
    ProtoId vehicleId = 3;
    string networkMode = 4;
    double relativePositionOnLink = 5;
}